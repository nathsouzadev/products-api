# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Development

on:
  push:
    branches:
      - main
      - stage
  pull_request:
    branches:
      - main
      - stage
      
env:
  ## Sets environment variable
  PORT: 5000

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Gb
      run: echo $GITHUB_REF
    
    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Run unit tests
      run: yarn test
  
  e2e:
    if: needs.test.result == 'success'
    needs:
      - test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Running e2e tests
      run: yarn test:e2e

  stage:
    if: needs.test.result == 'success' && needs.e2e.result == 'success'
    needs:
      - test
      - e2e
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn --frozen-lockfile
  
  deploy:
    needs:
      - test
      - e2e
      - stage
    runs-on: ubuntu-latest

    steps:
     - uses: JorgeLNJunior/render-deploy@v1.3.2
       with:
         service_id: ${{ secrets.RENDER_SERVICE_ID }}
         api_key: ${{ secrets.RENDER_API_KEY }}
         clear_cache: true
         wait_deploy: true

      
